{
	"info": {
		"_postman_id": "e3871dba-669e-411b-9004-2e6126c16a49",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19775277"
	},
	"item": [
		{
			"name": "First",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!ss\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"let req = request.data\r",
							"let req_name = req.name \r",
							"let req_age = req.age\r",
							"let req_salary = +req.salary\r",
							"let resp_salary_1_5 = req_salary * 4\r",
							"\r",
							"console.log(\"req_salary = \" + typeof req_salary)\r",
							"console.log(\"resp_salary = \" + typeof jsonData.salary)\r",
							"console.log(\"family = \" + jsonData.family.children)\r",
							"\r",
							"\r",
							"pm.test(\"resp_name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql('Gleb');\r",
							"});\r",
							"pm.test(\"resp_age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql('29');\r",
							"});\r",
							"pm.test(\"resp_salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(4000);\r",
							"});\r",
							"\r",
							"pm.test(\"req_name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req_name);\r",
							"});\r",
							"pm.test(\"req_age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req_age);\r",
							"});\r",
							"pm.test(\"req_salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"u_salary_1_5_year\", function () {\r",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(resp_salary_1_5);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Gleb",
							"type": "text"
						},
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "4000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_3",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Gleb",
							"disabled": true
						},
						{
							"key": "age",
							"value": "29",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "4000",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"let req = pm.request.url.query.toObject();\r",
							"let req_name = req.name\r",
							"let req_age = req.age\r",
							"let req_salary = req.salary\r",
							"var resp_salary = String(jsonData.salary)\r",
							"\r",
							"\r",
							"\r",
							"console.log(\"req_salary = \" + typeof req.salary)\r",
							"console.log(\"resp_salary = \" + typeof jsonData.salary)\r",
							"\r",
							"for( let i in jsonData.family)\r",
							"{\r",
							"    console.log(\"family = \" + i)\r",
							"//console.log(\"family = \"+i+\" = \" +jsonData.family[i])\r",
							"}\r",
							"\r",
							"pm.test(\"Name responce\", function () {\r",
							"       pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"pm.test(\"Age responce\", function () {\r",
							"       pm.expect(jsonData.age).to.eql(req.age);\r",
							"});\r",
							"pm.test(\"Salary responce\", function () {\r",
							"       pm.expect(resp_salary).to.eql(req.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Dog have property name\", function () {\r",
							"       pm.expect(jsonData.family.pets.dog).to.have.property('name');\r",
							"});\r",
							"pm.test(\"Dog have property age\", function () {\r",
							"       pm.expect(jsonData.family.pets.dog).to.have.property('age');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"name=Luky\", function () {\r",
							"       pm.expect(jsonData.family.pets.dog.name).to.eql('Luky');\r",
							"});\r",
							"\r",
							"pm.test(\"age=4\", function () {\r",
							"       pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "29",
							"type": "text",
							"disabled": true
						},
						{
							"key": "name",
							"value": "Gleb",
							"type": "text",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "4000",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{url}}/object_info_3?age=28&name=Gleb&salary=3000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "age",
							"value": "28"
						},
						{
							"key": "name",
							"value": "Gleb"
						},
						{
							"key": "salary",
							"value": "3000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"let req = pm.request.url.query.toObject()\r",
							"var resp_age = String(jsonData.age)\r",
							"var null_element = String(jsonData.salary[0])\r",
							"var first_element = String(jsonData.salary[1])\r",
							"var second_element = String(jsonData.salary[2])\r",
							"let salaryx2 = String(req.salary * 2)\r",
							"let salaryx3 = String(req.salary * 3)\r",
							"\r",
							"\r",
							"console.log(\"req_salary = \" +req.salary)\r",
							"console.log(\"resp_salary = \" +jsonData.salary)\r",
							"console.log(\"0 element= \" +jsonData.salary[0])\r",
							"console.log(\"1 element= \" +jsonData.salary[1])\r",
							"console.log(\"2 element= \" +jsonData.salary[2])\r",
							"\r",
							"\r",
							"pm.test(\"resp_name=req.name\", function () {\r",
							"      pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"pm.test(\"resp_age=req.age\", function () {\r",
							"      pm.expect(resp_age).to.eql(req.age);\r",
							"});\r",
							"\r",
							"pm.test(\"0 element = req_salary\", function () {\r",
							"      pm.expect(null_element).to.eql(req.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"first_element = req_salary\", function () {\r",
							"      pm.expect(first_element).to.eql(salaryx2);\r",
							"});\r",
							"\r",
							"pm.test(\"second_element = req_salary\", function () {\r",
							"      pm.expect(second_element).to.eql(salaryx3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", req.name);\r",
							"pm.environment.set(\"age\", req.age);\r",
							"pm.environment.set(\"salary\", req.salary);\r",
							"\r",
							"for (let i = 0; i < jsonData.salary.length; i++)\r",
							"{\r",
							"    console.log(jsonData.salary[i]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Gleb",
							"type": "text",
							"disabled": true
						},
						{
							"key": "age",
							"value": "29",
							"type": "text",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "4000",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{url}}/object_info_4?name=Gleb&age=29&salary=4000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Gleb"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "4000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var req = request.data\r",
							"var req_salary = req.salary\r",
							"\r",
							"pm.test(\"property_start_qa_salary\", function () {\r",
							"       pm.expect(jsonData).to.have.property('start_qa_salary');\r",
							"});\r",
							"pm.test(\"property_qa_salary_after_1.5_year\", function () {\r",
							"       pm.expect(jsonData).to.have.property('qa_salary_after_1.5_year');\r",
							"});\r",
							"pm.test(\"property_salary_after_3.5_years\", function () {\r",
							"       pm.expect(jsonData).to.have.property('qa_salary_after_3.5_years');\r",
							"});\r",
							"pm.test(\"property_qa_salary_after_6_months\", function () {\r",
							"       pm.expect(jsonData).to.have.property('qa_salary_after_6_months');\r",
							"});\r",
							"pm.test(\"property_qa_salary_after_12_months\", function () {\r",
							"       pm.expect(jsonData).to.have.property('qa_salary_after_12_months');\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"property_person\", function () {\r",
							"       pm.expect(jsonData).to.have.property('person');\r",
							"});\r",
							"\r",
							"pm.test(\"resp_salary=req_salary\", function () {\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(+req.salary);\r",
							"});\r",
							"pm.test(\"qa_salary_after_6_months=salary*2\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(+req.salary*2);\r",
							"});\r",
							"pm.test(\"qa_salary_after_12_months=salary*2.7\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(+req.salary*2.7);\r",
							"});\r",
							"pm.test(\"qa_salary_after_1.5_year=salary*3.3\", function () {\r",
							"    pm.expect(jsonData['qa_salary_after_1.5_year']).to.eql(+req.salary*3.3);\r",
							"});\r",
							"pm.test(\"qa_salary_after_3.5_year=salary*3.3\", function () {\r",
							"    pm.expect(jsonData['qa_salary_after_3.5_years']).to.eql(+req.salary*3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"u_name[1]=req_salary\", function () {\r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(+req.salary);\r",
							"});\r",
							"pm.test(\"u_age=req_age\", function () {\r",
							"    pm.expect(jsonData.person.u_age).to.eql(+req.age);\r",
							"});\r",
							"pm.test(\"u_salary_5_years=salary*4.2\", function () {\r",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(+req.salary*4.2);\r",
							"});\r",
							"\r",
							"\r",
							"for (let i in jsonData.person)\r",
							"{\r",
							"    console.log('Elements in person '+i+\" = \", jsonData.person[i]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}